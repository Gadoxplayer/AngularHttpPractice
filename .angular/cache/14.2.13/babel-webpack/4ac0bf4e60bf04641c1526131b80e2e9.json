{"ast":null,"code":"import _toConsumableArray from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _get from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _createClass from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _possibleConstructorReturn from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n/**\n * @license Angular v14.3.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, inject, ɵConsole, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar GenericBrowserDomAdapter = /*#__PURE__*/function (_ɵDomAdapter) {\n  _inherits(GenericBrowserDomAdapter, _ɵDomAdapter);\n  function GenericBrowserDomAdapter() {\n    var _this;\n    _classCallCheck(this, GenericBrowserDomAdapter);\n    _this = _callSuper(this, GenericBrowserDomAdapter, arguments);\n    _this.supportsDOMEvents = true;\n    return _this;\n  }\n  return _createClass(GenericBrowserDomAdapter);\n}(ɵDomAdapter);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nvar BrowserDomAdapter = /*#__PURE__*/function (_GenericBrowserDomAda) {\n  _inherits(BrowserDomAdapter, _GenericBrowserDomAda);\n  function BrowserDomAdapter() {\n    _classCallCheck(this, BrowserDomAdapter);\n    return _callSuper(this, BrowserDomAdapter, arguments);\n  }\n  _createClass(BrowserDomAdapter, [{\n    key: \"onAndCancel\",\n    value: function onAndCancel(el, evt, listener) {\n      el.addEventListener(evt, listener, false);\n      // Needed to follow Dart's subscription semantic, until fix of\n      // https://code.google.com/p/dart/issues/detail?id=17406\n      return function () {\n        el.removeEventListener(evt, listener, false);\n      };\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(el, evt) {\n      el.dispatchEvent(evt);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(tagName, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createElement(tagName);\n    }\n  }, {\n    key: \"createHtmlDocument\",\n    value: function createHtmlDocument() {\n      return document.implementation.createHTMLDocument('fakeTitle');\n    }\n  }, {\n    key: \"getDefaultDocument\",\n    value: function getDefaultDocument() {\n      return document;\n    }\n  }, {\n    key: \"isElementNode\",\n    value: function isElementNode(node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    }\n  }, {\n    key: \"isShadowRoot\",\n    value: function isShadowRoot(node) {\n      return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  }, {\n    key: \"getGlobalEventTarget\",\n    value: function getGlobalEventTarget(doc, target) {\n      if (target === 'window') {\n        return window;\n      }\n      if (target === 'document') {\n        return doc;\n      }\n      if (target === 'body') {\n        return doc.body;\n      }\n      return null;\n    }\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref(doc) {\n      var href = getBaseElementHref();\n      return href == null ? null : relativePath(href);\n    }\n  }, {\n    key: \"resetBaseElement\",\n    value: function resetBaseElement() {\n      baseElement = null;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return window.navigator.userAgent;\n    }\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      return ɵparseCookieValue(document.cookie, name);\n    }\n  }], [{\n    key: \"makeCurrent\",\n    value: function makeCurrent() {\n      ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n  }]);\n  return BrowserDomAdapter;\n}(GenericBrowserDomAdapter);\nvar baseElement = null;\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nvar urlParsingNode;\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  var pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : \"/\".concat(pathName);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n  return function () {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(function () {\n      var dom = ɵgetDOM();\n      var styles = document.querySelectorAll(\"style[ng-transition=\\\"\".concat(transitionId, \"\\\"]\"));\n      for (var i = 0; i < styles.length; i++) {\n        dom.remove(styles[i]);\n      }\n    });\n  };\n}\nvar SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserGetTestability = /*#__PURE__*/function () {\n  function BrowserGetTestability() {\n    _classCallCheck(this, BrowserGetTestability);\n  }\n  _createClass(BrowserGetTestability, [{\n    key: \"addToWindow\",\n    value: function addToWindow(registry) {\n      ɵglobal['getAngularTestability'] = function (elem) {\n        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var testability = registry.findTestabilityInTree(elem, findInAncestors);\n        if (testability == null) {\n          throw new Error('Could not find testability for element.');\n        }\n        return testability;\n      };\n      ɵglobal['getAllAngularTestabilities'] = function () {\n        return registry.getAllTestabilities();\n      };\n      ɵglobal['getAllAngularRootElements'] = function () {\n        return registry.getAllRootElements();\n      };\n      var whenAllStable = function whenAllStable(callback /** TODO #9100 */) {\n        var testabilities = ɵglobal['getAllAngularTestabilities']();\n        var count = testabilities.length;\n        var didWork = false;\n        var decrement = function decrement(didWork_ /** TODO #9100 */) {\n          didWork = didWork || didWork_;\n          count--;\n          if (count == 0) {\n            callback(didWork);\n          }\n        };\n        testabilities.forEach(function (testability /** TODO #9100 */) {\n          testability.whenStable(decrement);\n        });\n      };\n      if (!ɵglobal['frameworkStabilizers']) {\n        ɵglobal['frameworkStabilizers'] = [];\n      }\n      ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n  }, {\n    key: \"findTestabilityInTree\",\n    value: function findTestabilityInTree(registry, elem, findInAncestors) {\n      if (elem == null) {\n        return null;\n      }\n      var t = registry.getTestability(elem);\n      if (t != null) {\n        return t;\n      } else if (!findInAncestors) {\n        return null;\n      }\n      if (ɵgetDOM().isShadowRoot(elem)) {\n        return this.findTestabilityInTree(registry, elem.host, true);\n      }\n      return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n  }]);\n  return BrowserGetTestability;\n}();\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nvar BrowserXhr = /*#__PURE__*/function () {\n  function BrowserXhr() {\n    _classCallCheck(this, BrowserXhr);\n  }\n  _createClass(BrowserXhr, [{\n    key: \"build\",\n    value: function build() {\n      return new XMLHttpRequest();\n    }\n  }]);\n  return BrowserXhr;\n}();\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) {\n  return new (t || BrowserXhr)();\n};\nBrowserXhr.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BrowserXhr,\n  factory: BrowserXhr.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  function EventManager(plugins, _zone) {\n    var _this2 = this;\n    _classCallCheck(this, EventManager);\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(function (p) {\n      return p.manager = _this2;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n      return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n  }, {\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(target, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n      return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n  }, {\n    key: \"getZone\",\n    value: function getZone() {\n      return this._zone;\n    }\n    /** @internal */\n  }, {\n    key: \"_findPluginFor\",\n    value: function _findPluginFor(eventName) {\n      var plugin = this._eventNameToPlugin.get(eventName);\n      if (plugin) {\n        return plugin;\n      }\n      var plugins = this._plugins;\n      for (var i = 0; i < plugins.length; i++) {\n        var _plugin = plugins[i];\n        if (_plugin.supports(eventName)) {\n          this._eventNameToPlugin.set(eventName, _plugin);\n          return _plugin;\n        }\n      }\n      throw new Error(\"No event manager plugin found for event \".concat(eventName));\n    }\n  }]);\n  return EventManager;\n}();\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n};\nEventManager.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nvar EventManagerPlugin = /*#__PURE__*/function () {\n  function EventManagerPlugin(_doc) {\n    _classCallCheck(this, EventManagerPlugin);\n    this._doc = _doc;\n  }\n  _createClass(EventManagerPlugin, [{\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(element, eventName, handler) {\n      var target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n      if (!target) {\n        throw new Error(\"Unsupported event target \".concat(target, \" for event \").concat(eventName));\n      }\n      return this.addEventListener(target, eventName, handler);\n    }\n  }]);\n  return EventManagerPlugin;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SharedStylesHost = /*#__PURE__*/function () {\n  function SharedStylesHost() {\n    _classCallCheck(this, SharedStylesHost);\n    /** @internal */\n    this._stylesSet = new Set();\n  }\n  _createClass(SharedStylesHost, [{\n    key: \"addStyles\",\n    value: function addStyles(styles) {\n      var _this3 = this;\n      var additions = new Set();\n      styles.forEach(function (style) {\n        if (!_this3._stylesSet.has(style)) {\n          _this3._stylesSet.add(style);\n          additions.add(style);\n        }\n      });\n      this.onStylesAdded(additions);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {}\n  }, {\n    key: \"getAllStyles\",\n    value: function getAllStyles() {\n      return Array.from(this._stylesSet);\n    }\n  }]);\n  return SharedStylesHost;\n}();\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\nSharedStylesHost.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], null, null);\n})();\nvar DomSharedStylesHost = /*#__PURE__*/function (_SharedStylesHost) {\n  _inherits(DomSharedStylesHost, _SharedStylesHost);\n  function DomSharedStylesHost(_doc) {\n    var _this4;\n    _classCallCheck(this, DomSharedStylesHost);\n    _this4 = _callSuper(this, DomSharedStylesHost);\n    _this4._doc = _doc;\n    // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n    _this4._hostNodes = new Map();\n    _this4._hostNodes.set(_doc.head, []);\n    return _this4;\n  }\n  _createClass(DomSharedStylesHost, [{\n    key: \"_addStylesToHost\",\n    value: function _addStylesToHost(styles, host, styleNodes) {\n      var _this5 = this;\n      styles.forEach(function (style) {\n        var styleEl = _this5._doc.createElement('style');\n        styleEl.textContent = style;\n        styleNodes.push(host.appendChild(styleEl));\n      });\n    }\n  }, {\n    key: \"addHost\",\n    value: function addHost(hostNode) {\n      var styleNodes = [];\n      this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n      this._hostNodes.set(hostNode, styleNodes);\n    }\n  }, {\n    key: \"removeHost\",\n    value: function removeHost(hostNode) {\n      var styleNodes = this._hostNodes.get(hostNode);\n      if (styleNodes) {\n        styleNodes.forEach(removeStyle);\n      }\n      this._hostNodes.delete(hostNode);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {\n      var _this6 = this;\n      this._hostNodes.forEach(function (styleNodes, hostNode) {\n        _this6._addStylesToHost(additions, hostNode, styleNodes);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._hostNodes.forEach(function (styleNodes) {\n        return styleNodes.forEach(removeStyle);\n      });\n    }\n  }]);\n  return DomSharedStylesHost;\n}(SharedStylesHost);\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(i0.ɵɵinject(DOCUMENT));\n};\nDomSharedStylesHost.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\nfunction removeStyle(styleNode) {\n  ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/'\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\".concat(COMPONENT_VARIABLE);\nvar CONTENT_ATTR = \"_ngcontent-\".concat(COMPONENT_VARIABLE);\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n  for (var i = 0; i < styles.length; i++) {\n    var style = styles[i];\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return function (event) {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n    var allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n    return undefined;\n  };\n}\nvar hasLoggedNativeEncapsulationWarning = false;\nvar DomRendererFactory2 = /*#__PURE__*/function () {\n  function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n    _classCallCheck(this, DomRendererFactory2);\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n  _createClass(DomRendererFactory2, [{\n    key: \"createRenderer\",\n    value: function createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          {\n            var renderer = this.rendererByCompId.get(type.id);\n            if (!renderer) {\n              renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n              this.rendererByCompId.set(type.id, renderer);\n            }\n            renderer.applyToHost(element);\n            return renderer;\n          }\n        // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n        // value that is not known (but previously was the value for ViewEncapsulation.Native)\n        case 1:\n        case ViewEncapsulation.ShadowDom:\n          // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n          if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n          // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n          // enum value that is not known (but previously was the value for\n          // ViewEncapsulation.Native)\n          !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n            hasLoggedNativeEncapsulationWarning = true;\n            console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n          }\n          return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n        default:\n          {\n            if (!this.rendererByCompId.has(type.id)) {\n              var styles = flattenStyles(type.id, type.styles, []);\n              this.sharedStylesHost.addStyles(styles);\n              this.rendererByCompId.set(type.id, this.defaultRenderer);\n            }\n            return this.defaultRenderer;\n          }\n      }\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {}\n  }, {\n    key: \"end\",\n    value: function end() {}\n  }]);\n  return DomRendererFactory2;\n}();\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(DomSharedStylesHost), i0.ɵɵinject(APP_ID));\n};\nDomRendererFactory2.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\nvar DefaultDomRenderer2 = /*#__PURE__*/function () {\n  function DefaultDomRenderer2(eventManager) {\n    _classCallCheck(this, DefaultDomRenderer2);\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n    this.destroyNode = null;\n  }\n  _createClass(DefaultDomRenderer2, [{\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace) {\n      if (namespace) {\n        // TODO: `|| namespace` was added in\n        // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n        // support how Ivy passed around the namespace URI rather than short name at the time. It did\n        // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n        // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n        // namespaces should be and make it consistent.\n        // Related issues:\n        // https://github.com/angular/angular/issues/44028\n        // https://github.com/angular/angular/issues/44883\n        return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n      }\n      return document.createElement(name);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(value) {\n      return document.createComment(value);\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(value) {\n      return document.createTextNode(value);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      var targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.appendChild(newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      if (parent) {\n        var targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.insertBefore(newChild, refChild);\n      }\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      if (parent) {\n        parent.removeChild(oldChild);\n      }\n    }\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, preserveContent) {\n      var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n      if (!el) {\n        throw new Error(\"The selector \\\"\".concat(selectorOrNode, \"\\\" did not match any elements\"));\n      }\n      if (!preserveContent) {\n        el.textContent = '';\n      }\n      return el;\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return node.parentNode;\n    }\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return node.nextSibling;\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      if (namespace) {\n        name = namespace + ':' + name;\n        var namespaceUri = NAMESPACE_URIS[namespace];\n        if (namespaceUri) {\n          el.setAttributeNS(namespaceUri, name, value);\n        } else {\n          el.setAttribute(name, value);\n        }\n      } else {\n        el.setAttribute(name, value);\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      if (namespace) {\n        var namespaceUri = NAMESPACE_URIS[namespace];\n        if (namespaceUri) {\n          el.removeAttributeNS(namespaceUri, name);\n        } else {\n          el.removeAttribute(\"\".concat(namespace, \":\").concat(name));\n        }\n      } else {\n        el.removeAttribute(name);\n      }\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      el.classList.add(name);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      el.classList.remove(name);\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n        el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n      } else {\n        el.style[style] = value;\n      }\n    }\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      if (flags & RendererStyleFlags2.DashCase) {\n        el.style.removeProperty(style);\n      } else {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        el.style[style] = '';\n      }\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      NG_DEV_MODE$1 && checkNoSyntheticProp(name, 'property');\n      el[name] = value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      node.nodeValue = value;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, event, callback) {\n      NG_DEV_MODE$1 && checkNoSyntheticProp(event, 'listener');\n      if (typeof target === 'string') {\n        return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n      }\n      return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n  }]);\n  return DefaultDomRenderer2;\n}();\nvar AT_CHARCODE = function () {\n  return '@'.charCodeAt(0);\n}();\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\"Unexpected synthetic \".concat(nameKind, \" \").concat(name, \" found. Please make sure that:\\n  - Either `BrowserAnimationsModule` or `NoopAnimationsModule` are imported in your application.\\n  - There is corresponding configuration for the animation named `\").concat(name, \"` defined in the `animations` field of the `@Component` decorator (see https://angular.io/api/core/Component#animations).\"));\n  }\n}\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nvar EmulatedEncapsulationDomRenderer2 = /*#__PURE__*/function (_DefaultDomRenderer) {\n  _inherits(EmulatedEncapsulationDomRenderer2, _DefaultDomRenderer);\n  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n    var _this7;\n    _classCallCheck(this, EmulatedEncapsulationDomRenderer2);\n    _this7 = _callSuper(this, EmulatedEncapsulationDomRenderer2, [eventManager]);\n    _this7.component = component;\n    var styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    _this7.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    _this7.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    return _this7;\n  }\n  _createClass(EmulatedEncapsulationDomRenderer2, [{\n    key: \"applyToHost\",\n    value: function applyToHost(element) {\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, element, this.hostAttr, '');\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(parent, name) {\n      var el = _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"createElement\", this).call(this, parent, name);\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, el, this.contentAttr, '');\n      return el;\n    }\n  }]);\n  return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2);\nvar ShadowDomRenderer = /*#__PURE__*/function (_DefaultDomRenderer2) {\n  _inherits(ShadowDomRenderer, _DefaultDomRenderer2);\n  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n    var _this8;\n    _classCallCheck(this, ShadowDomRenderer);\n    _this8 = _callSuper(this, ShadowDomRenderer, [eventManager]);\n    _this8.sharedStylesHost = sharedStylesHost;\n    _this8.hostEl = hostEl;\n    _this8.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    _this8.sharedStylesHost.addHost(_this8.shadowRoot);\n    var styles = flattenStyles(component.id, component.styles, []);\n    for (var i = 0; i < styles.length; i++) {\n      var styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      _this8.shadowRoot.appendChild(styleEl);\n    }\n    return _this8;\n  }\n  _createClass(ShadowDomRenderer, [{\n    key: \"nodeOrShadowRoot\",\n    value: function nodeOrShadowRoot(node) {\n      return node === this.hostEl ? this.shadowRoot : node;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"appendChild\", this).call(this, this.nodeOrShadowRoot(parent), newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"insertBefore\", this).call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"removeChild\", this).call(this, this.nodeOrShadowRoot(parent), oldChild);\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return this.nodeOrShadowRoot(_get(_getPrototypeOf(ShadowDomRenderer.prototype), \"parentNode\", this).call(this, this.nodeOrShadowRoot(node)));\n    }\n  }]);\n  return ShadowDomRenderer;\n}(DefaultDomRenderer2);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DomEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin) {\n  _inherits(DomEventsPlugin, _EventManagerPlugin);\n  function DomEventsPlugin(doc) {\n    _classCallCheck(this, DomEventsPlugin);\n    return _callSuper(this, DomEventsPlugin, [doc]);\n  }\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  _createClass(DomEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this9 = this;\n      element.addEventListener(eventName, handler, false);\n      return function () {\n        return _this9.removeEventListener(element, eventName, handler);\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(target, eventName, callback) {\n      return target.removeEventListener(eventName, callback);\n    }\n  }]);\n  return DomEventsPlugin;\n}(EventManagerPlugin);\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n};\nDomEventsPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nvar _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nvar MODIFIER_KEY_GETTERS = {\n  'alt': function alt(event) {\n    return event.altKey;\n  },\n  'control': function control(event) {\n    return event.ctrlKey;\n  },\n  'meta': function meta(event) {\n    return event.metaKey;\n  },\n  'shift': function shift(event) {\n    return event.shiftKey;\n  }\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nvar KeyEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin2) {\n  _inherits(KeyEventsPlugin, _EventManagerPlugin2);\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  function KeyEventsPlugin(doc) {\n    _classCallCheck(this, KeyEventsPlugin);\n    return _callSuper(this, KeyEventsPlugin, [doc]);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  _createClass(KeyEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n      var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(function () {\n        return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n      });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n  }], [{\n    key: \"parseEventName\",\n    value: function parseEventName(eventName) {\n      var parts = eventName.toLowerCase().split('.');\n      var domEventName = parts.shift();\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n      var key = KeyEventsPlugin._normalizeKey(parts.pop());\n      var fullKey = '';\n      var codeIX = parts.indexOf('code');\n      if (codeIX > -1) {\n        parts.splice(codeIX, 1);\n        fullKey = 'code.';\n      }\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        var index = parts.indexOf(modifierName);\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      }\n      // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n      //       The code must remain in the `result['domEventName']` form.\n      // return {domEventName, fullKey};\n      var result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n  }, {\n    key: \"matchEventFullKeyCode\",\n    value: function matchEventFullKeyCode(event, fullKeyCode) {\n      var keycode = _keyMap[event.key] || event.key;\n      var key = '';\n      if (fullKeyCode.indexOf('code.') > -1) {\n        keycode = event.code;\n        key = 'code.';\n      }\n      // the keycode could be unidentified so we have to check here\n      if (keycode == null || !keycode) return false;\n      keycode = keycode.toLowerCase();\n      if (keycode === ' ') {\n        keycode = 'space'; // for readability\n      } else if (keycode === '.') {\n        keycode = 'dot'; // because '.' is used as a separator in event names\n      }\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        if (modifierName !== keycode) {\n          var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n          if (modifierGetter(event)) {\n            key += modifierName + '.';\n          }\n        }\n      });\n      key += keycode;\n      return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n  }, {\n    key: \"eventCallback\",\n    value: function eventCallback(fullKey, handler, zone) {\n      return function (event) {\n        if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n          zone.runGuarded(function () {\n            return handler(event);\n          });\n        }\n      };\n    }\n    /** @internal */\n  }, {\n    key: \"_normalizeKey\",\n    value: function _normalizeKey(keyName) {\n      // TODO: switch to a Map if the mapping grows too much\n      switch (keyName) {\n        case 'esc':\n          return 'escape';\n        default:\n          return keyName;\n      }\n    }\n  }]);\n  return KeyEventsPlugin;\n}(EventManagerPlugin);\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n};\nKeyEventsPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication(Object.assign({\n    rootComponent: rootComponent\n  }, createProvidersConfig(options)));\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n  var _a;\n  return {\n    appProviders: [].concat(BROWSER_MODULE_PROVIDERS, _toConsumableArray((_a = options === null || options === void 0 ? void 0 : options.providers) !== null && _a !== void 0 ? _a : [])),\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @developerPreview\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n  return [].concat(TESTABILITY_PROVIDERS);\n}\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n  return new ErrorHandler();\n}\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nvar BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\nvar TESTABILITY_PROVIDERS = [{\n  provide: ɵTESTABILITY_GETTER,\n  useClass: BrowserGetTestability,\n  deps: []\n}, {\n  provide: ɵTESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}];\nvar BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, NG_DEV_MODE ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nvar BrowserModule = /*#__PURE__*/function () {\n  function BrowserModule(providersAlreadyPresent) {\n    _classCallCheck(this, BrowserModule);\n    if (NG_DEV_MODE && providersAlreadyPresent) {\n      throw new Error(\"Providers from the `BrowserModule` have already been loaded. If you need access \" + \"to common directives such as NgIf and NgFor, import the `CommonModule` instead.\");\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  _createClass(BrowserModule, null, [{\n    key: \"withServerTransition\",\n    value: function withServerTransition(params) {\n      return {\n        ngModule: BrowserModule,\n        providers: [{\n          provide: APP_ID,\n          useValue: params.appId\n        }, {\n          provide: TRANSITION_ID,\n          useExisting: APP_ID\n        }, SERVER_TRANSITION_PROVIDERS]\n      };\n    }\n  }]);\n  return BrowserModule;\n}();\nBrowserModule.ɵfac = function BrowserModule_Factory(t) {\n  return new (t || BrowserModule)(i0.ɵɵinject(BROWSER_MODULE_PROVIDERS_MARKER, 12));\n};\nBrowserModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [].concat(BROWSER_MODULE_PROVIDERS, TESTABILITY_PROVIDERS),\n  imports: [CommonModule, ApplicationModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: [].concat(BROWSER_MODULE_PROVIDERS, TESTABILITY_PROVIDERS),\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BROWSER_MODULE_PROVIDERS_MARKER]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nvar Meta = /*#__PURE__*/function () {\n  function Meta(_doc) {\n    _classCallCheck(this, Meta);\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  _createClass(Meta, [{\n    key: \"addTag\",\n    value: function addTag(tag) {\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n  }, {\n    key: \"addTags\",\n    value: function addTags(tags) {\n      var _this10 = this;\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tags) return [];\n      return tags.reduce(function (result, tag) {\n        if (tag) {\n          result.push(_this10._getOrCreateElement(tag, forceCreation));\n        }\n        return result;\n      }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n  }, {\n    key: \"getTag\",\n    value: function getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._doc.querySelector(\"meta[\".concat(attrSelector, \"]\")) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n  }, {\n    key: \"getTags\",\n    value: function getTags(attrSelector) {\n      if (!attrSelector) return [];\n      var list /*NodeList*/ = this._doc.querySelectorAll(\"meta[\".concat(attrSelector, \"]\"));\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n  }, {\n    key: \"updateTag\",\n    value: function updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      var meta = this.getTag(selector);\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n  }, {\n    key: \"removeTag\",\n    value: function removeTag(attrSelector) {\n      this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n  }, {\n    key: \"removeTagElement\",\n    value: function removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n  }, {\n    key: \"_getOrCreateElement\",\n    value: function _getOrCreateElement(meta) {\n      var _this11 = this;\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!forceCreation) {\n        var selector = this._parseSelector(meta);\n        // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n        var elem = this.getTags(selector).filter(function (elem) {\n          return _this11._containsAttributes(meta, elem);\n        })[0];\n        if (elem !== undefined) return elem;\n      }\n      var element = this._dom.createElement('meta');\n      this._setMetaElementAttributes(meta, element);\n      var head = this._doc.getElementsByTagName('head')[0];\n      head.appendChild(element);\n      return element;\n    }\n  }, {\n    key: \"_setMetaElementAttributes\",\n    value: function _setMetaElementAttributes(tag, el) {\n      var _this12 = this;\n      Object.keys(tag).forEach(function (prop) {\n        return el.setAttribute(_this12._getMetaKeyMap(prop), tag[prop]);\n      });\n      return el;\n    }\n  }, {\n    key: \"_parseSelector\",\n    value: function _parseSelector(tag) {\n      var attr = tag.name ? 'name' : 'property';\n      return \"\".concat(attr, \"=\\\"\").concat(tag[attr], \"\\\"\");\n    }\n  }, {\n    key: \"_containsAttributes\",\n    value: function _containsAttributes(tag, elem) {\n      var _this13 = this;\n      return Object.keys(tag).every(function (key) {\n        return elem.getAttribute(_this13._getMetaKeyMap(key)) === tag[key];\n      });\n    }\n  }, {\n    key: \"_getMetaKeyMap\",\n    value: function _getMetaKeyMap(prop) {\n      return META_KEYS_MAP[prop] || prop;\n    }\n  }]);\n  return Meta;\n}();\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(i0.ɵɵinject(DOCUMENT));\n};\nMeta.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Meta,\n  factory: function Meta_Factory(t) {\n    var r = null;\n    if (t) {\n      r = new t();\n    } else {\n      r = createMeta();\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nvar META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nvar Title = /*#__PURE__*/function () {\n  function Title(_doc) {\n    _classCallCheck(this, Title);\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n  _createClass(Title, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(newTitle) {\n      this._doc.title = newTitle || '';\n    }\n  }]);\n  return Title;\n}();\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(i0.ɵɵinject(DOCUMENT));\n};\nTitle.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Title,\n  factory: function Title_Factory(t) {\n    var r = null;\n    if (t) {\n      r = new t();\n    } else {\n      r = createTitle();\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, function () {\n    for (var _len = arguments.length, m = new Array(_len), _key = 0; _key < _len; _key++) {\n      m[_key] = arguments[_key];\n    }\n    return '-' + m[1].toLowerCase();\n  });\n}\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, function () {\n    for (var _len2 = arguments.length, m = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      m[_key2] = arguments[_key2];\n    }\n    return m[1].toUpperCase();\n  });\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    var ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectionPerfRecord = /*#__PURE__*/_createClass(function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n  _classCallCheck(this, ChangeDetectionPerfRecord);\n  this.msPerTick = msPerTick;\n  this.numTicks = numTicks;\n});\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nvar AngularProfiler = /*#__PURE__*/function () {\n  function AngularProfiler(ref) {\n    _classCallCheck(this, AngularProfiler);\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  _createClass(AngularProfiler, [{\n    key: \"timeChangeDetection\",\n    value: function timeChangeDetection(config) {\n      var record = config && config['record'];\n      var profileName = 'Change Detection';\n      // Profiler is not available in Android browsers without dev tools opened\n      var isProfilerAvailable = win.console.profile != null;\n      if (record && isProfilerAvailable) {\n        win.console.profile(profileName);\n      }\n      var start = performanceNow();\n      var numTicks = 0;\n      while (numTicks < 5 || performanceNow() - start < 500) {\n        this.appRef.tick();\n        numTicks++;\n      }\n      var end = performanceNow();\n      if (record && isProfilerAvailable) {\n        win.console.profileEnd(profileName);\n      }\n      var msPerTick = (end - start) / numTicks;\n      win.console.log(\"ran \".concat(numTicks, \" change detection cycles\"));\n      win.console.log(\"\".concat(msPerTick.toFixed(2), \" ms per check\"));\n      return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n  }]);\n  return AngularProfiler;\n}();\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() : new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n  var escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, function (s) {\n    return escapedText[s];\n  });\n}\nfunction unescapeHtml(text) {\n  var unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, function (s) {\n    return unescapedText[s];\n  });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nvar TransferState = /*#__PURE__*/function () {\n  function TransferState() {\n    _classCallCheck(this, TransferState);\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  _createClass(TransferState, [{\n    key: \"get\",\n    value: function get(key, defaultValue) {\n      return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n  }, {\n    key: \"hasKey\",\n    value: function hasKey(key) {\n      return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Indicates whether the state is empty.\n     */\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return Object.keys(this.store).length === 0;\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n  }, {\n    key: \"onSerialize\",\n    value: function onSerialize(key, callback) {\n      this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      // Call the onSerialize callbacks and put those values into the store.\n      for (var key in this.onSerializeCallbacks) {\n        if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n          try {\n            this.store[key] = this.onSerializeCallbacks[key]();\n          } catch (e) {\n            console.warn('Exception in onSerialize callback: ', e);\n          }\n        }\n      }\n      return JSON.stringify(this.store);\n    }\n  }]);\n  return TransferState;\n}();\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\nTransferState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: function factory() {\n    return function () {\n      var doc = inject(DOCUMENT);\n      var appId = inject(APP_ID);\n      var state = new TransferState();\n      state.store = retrieveTransferredState(doc, appId);\n      return state;\n    }();\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: function useFactory() {\n        var doc = inject(DOCUMENT);\n        var appId = inject(APP_ID);\n        var state = new TransferState();\n        state.store = retrieveTransferredState(doc, appId);\n        return state;\n      }\n    }]\n  }], null, null);\n})();\nfunction retrieveTransferredState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  var script = doc.getElementById(appId + '-state');\n  var initialState = {};\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return initialState;\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\nvar BrowserTransferStateModule = /*#__PURE__*/_createClass(function BrowserTransferStateModule() {\n  _classCallCheck(this, BrowserTransferStateModule);\n});\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n  return new (t || BrowserTransferStateModule)();\n};\nBrowserTransferStateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nvar By = /*#__PURE__*/function () {\n  function By() {\n    _classCallCheck(this, By);\n  }\n  _createClass(By, null, [{\n    key: \"all\",\n    value:\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    function all() {\n      return function () {\n        return true;\n      };\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n  }, {\n    key: \"css\",\n    value: function css(selector) {\n      return function (debugElement) {\n        return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n      };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n  }, {\n    key: \"directive\",\n    value: function directive(type) {\n      return function (debugNode) {\n        return debugNode.providerTokens.indexOf(type) !== -1;\n      };\n    }\n  }]);\n  return By;\n}();\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nvar EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nvar HammerGestureConfig = /*#__PURE__*/function () {\n  function HammerGestureConfig() {\n    _classCallCheck(this, HammerGestureConfig);\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  _createClass(HammerGestureConfig, [{\n    key: \"buildHammer\",\n    value: function buildHammer(element) {\n      var mc = new Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n      for (var eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n      return mc;\n    }\n  }]);\n  return HammerGestureConfig;\n}();\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\nHammerGestureConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nvar HammerGesturesPlugin = /*#__PURE__*/function (_EventManagerPlugin3) {\n  _inherits(HammerGesturesPlugin, _EventManagerPlugin3);\n  function HammerGesturesPlugin(doc, _config, console, loader) {\n    var _this14;\n    _classCallCheck(this, HammerGesturesPlugin);\n    _this14 = _callSuper(this, HammerGesturesPlugin, [doc]);\n    _this14._config = _config;\n    _this14.console = console;\n    _this14.loader = loader;\n    _this14._loaderPromise = null;\n    return _this14;\n  }\n  _createClass(HammerGesturesPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n      if (!window.Hammer && !this.loader) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because Hammer.JS is not \") + \"loaded and no custom loader has been specified.\");\n        }\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this15 = this;\n      var zone = this.manager.getZone();\n      eventName = eventName.toLowerCase();\n      // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n      if (!window.Hammer && this.loader) {\n        this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(function () {\n          return _this15.loader();\n        });\n        // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n        var cancelRegistration = false;\n        var deregister = function deregister() {\n          cancelRegistration = true;\n        };\n        zone.runOutsideAngular(function () {\n          return _this15._loaderPromise.then(function () {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!window.Hammer) {\n              if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _this15.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n              }\n              deregister = function deregister() {};\n              return;\n            }\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to\n              // removal.\n              deregister = _this15.addEventListener(element, eventName, handler);\n            }\n          }).catch(function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              _this15.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because the custom \") + \"Hammer.JS loader failed.\");\n            }\n            deregister = function deregister() {};\n          });\n        });\n        // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n        return function () {\n          deregister();\n        };\n      }\n      return zone.runOutsideAngular(function () {\n        // Creating the manager bind events, must be done outside of angular\n        var mc = _this15._config.buildHammer(element);\n        var callback = function callback(eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n        mc.on(eventName, callback);\n        return function () {\n          mc.off(eventName, callback);\n          // destroy mc to prevent memory leak\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n  }, {\n    key: \"isCustomEvent\",\n    value: function isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n  }]);\n  return HammerGesturesPlugin;\n}(EventManagerPlugin);\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.ɵConsole), i0.ɵɵinject(HAMMER_LOADER, 8));\n};\nHammerGesturesPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: i0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nvar HammerModule = /*#__PURE__*/_createClass(function HammerModule() {\n  _classCallCheck(this, HammerModule);\n});\nHammerModule.ɵfac = function HammerModule_Factory(t) {\n  return new (t || HammerModule)();\n};\nHammerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n  }, {\n    provide: HAMMER_GESTURE_CONFIG,\n    useClass: HammerGestureConfig,\n    deps: []\n  }]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig,\n        deps: []\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nvar DomSanitizer = /*#__PURE__*/_createClass(function DomSanitizer() {\n  _classCallCheck(this, DomSanitizer);\n});\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\nDomSanitizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSanitizer,\n  factory: function DomSanitizer_Factory(t) {\n    var r = null;\n    if (t) {\n      r = new (t || DomSanitizer)();\n    } else {\n      r = i0.ɵɵinject(DomSanitizerImpl);\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(function () {\n        return DomSanitizerImpl;\n      })\n    }]\n  }], null, null);\n})();\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nvar DomSanitizerImpl = /*#__PURE__*/function (_DomSanitizer) {\n  _inherits(DomSanitizerImpl, _DomSanitizer);\n  function DomSanitizerImpl(_doc) {\n    var _this16;\n    _classCallCheck(this, DomSanitizerImpl);\n    _this16 = _callSuper(this, DomSanitizerImpl);\n    _this16._doc = _doc;\n    return _this16;\n  }\n  _createClass(DomSanitizerImpl, [{\n    key: \"sanitize\",\n    value: function sanitize(ctx, value) {\n      if (value == null) return null;\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return value;\n        case SecurityContext.HTML:\n          if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n        case SecurityContext.STYLE:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return value;\n        case SecurityContext.SCRIPT:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          throw new Error('unsafe value used in a script context');\n        case SecurityContext.URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return ɵ_sanitizeUrl(String(value));\n        case SecurityContext.RESOURCE_URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n        default:\n          throw new Error(\"Unexpected SecurityContext \".concat(ctx, \" (see https://g.co/ng/security#xss)\"));\n      }\n    }\n  }, {\n    key: \"bypassSecurityTrustHtml\",\n    value: function bypassSecurityTrustHtml(value) {\n      return ɵbypassSanitizationTrustHtml(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustStyle\",\n    value: function bypassSecurityTrustStyle(value) {\n      return ɵbypassSanitizationTrustStyle(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustScript\",\n    value: function bypassSecurityTrustScript(value) {\n      return ɵbypassSanitizationTrustScript(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustUrl\",\n    value: function bypassSecurityTrustUrl(value) {\n      return ɵbypassSanitizationTrustUrl(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustResourceUrl\",\n    value: function bypassSecurityTrustResourceUrl(value) {\n      return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n  }]);\n  return DomSanitizerImpl;\n}(DomSanitizer);\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n};\nDomSanitizerImpl.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSanitizerImpl,\n  factory: function DomSanitizerImpl_Factory(t) {\n    var r = null;\n    if (t) {\n      r = new t();\n    } else {\n      r = domSanitizerImplFactory(i0.ɵɵinject(Injector));\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('14.3.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"names":["ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","i0","InjectionToken","ApplicationInitStatus","APP_INITIALIZER","Injector","ɵglobal","Injectable","Inject","ViewEncapsulation","APP_ID","RendererStyleFlags2","ɵinternalCreateApplication","ErrorHandler","ɵsetDocument","PLATFORM_ID","PLATFORM_INITIALIZER","createPlatformFactory","platformCore","ɵTESTABILITY_GETTER","ɵTESTABILITY","Testability","NgZone","TestabilityRegistry","ɵINJECTOR_SCOPE","RendererFactory2","ApplicationModule","NgModule","Optional","SkipSelf","ɵɵinject","ApplicationRef","inject","ɵConsole","forwardRef","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","Version","GenericBrowserDomAdapter","_ɵDomAdapter","_inherits","_this","_classCallCheck","_callSuper","arguments","supportsDOMEvents","_createClass","BrowserDomAdapter","_GenericBrowserDomAda","key","value","onAndCancel","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","node","parentNode","removeChild","createElement","tagName","doc","getDefaultDocument","createHtmlDocument","document","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","window","body","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","getCookie","name","cookie","makeCurrent","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","concat","TRANSITION_ID","appInitializerFactory","transitionId","injector","get","donePromise","then","dom","styles","querySelectorAll","i","length","SERVER_TRANSITION_PROVIDERS","provide","useFactory","deps","multi","BrowserGetTestability","addToWindow","registry","elem","findInAncestors","undefined","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","host","parentElement","BrowserXhr","build","XMLHttpRequest","ɵfac","BrowserXhr_Factory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_this2","_eventNameToPlugin","Map","p","manager","_plugins","slice","reverse","element","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","getZone","supports","set","EventManager_Factory","decorators","args","EventManagerPlugin","_doc","SharedStylesHost","_stylesSet","Set","addStyles","_this3","additions","style","has","add","onStylesAdded","getAllStyles","Array","from","SharedStylesHost_Factory","DomSharedStylesHost","_SharedStylesHost","_this4","_hostNodes","head","_addStylesToHost","styleNodes","_this5","styleEl","textContent","appendChild","addHost","hostNode","removeHost","removeStyle","delete","_this6","ngOnDestroy","DomSharedStylesHost_Factory","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE$1","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","replace","shimHostAttribute","flattenStyles","compId","isArray","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","console","warn","ShadowDomRenderer","begin","end","DomRendererFactory2_Factory","data","Object","create","destroyNode","destroy","namespace","createElementNS","createComment","createText","createTextNode","parent","newChild","targetParent","isTemplateNode","content","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttribute","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","DashCase","Important","setProperty","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","AT_CHARCODE","charCodeAt","nameKind","_DefaultDomRenderer","component","_this7","contentAttr","hostAttr","_get","_getPrototypeOf","prototype","call","_DefaultDomRenderer2","hostEl","_this8","shadowRoot","attachShadow","mode","nodeOrShadowRoot","DomEventsPlugin","_EventManagerPlugin","_this9","DomEventsPlugin_Factory","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","meta","metaKey","shift","shiftKey","KeyEventsPlugin","_EventManagerPlugin2","parseEventName","parsedEvent","outsideHandler","eventCallback","runOutsideAngular","parts","toLowerCase","split","domEventName","_normalizeKey","pop","fullKey","codeIX","indexOf","splice","modifierName","index","result","matchEventFullKeyCode","fullKeyCode","keycode","code","modifierGetter","zone","runGuarded","keyName","KeyEventsPlugin_Factory","NG_DEV_MODE","bootstrapApplication","rootComponent","options","assign","createProvidersConfig","createApplication","_a","appProviders","BROWSER_MODULE_PROVIDERS","_toConsumableArray","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","errorHandler","_document","useValue","platformBrowser","BROWSER_MODULE_PROVIDERS_MARKER","useClass","useExisting","BrowserModule","providersAlreadyPresent","withServerTransition","params","ngModule","BrowserModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","createMeta","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","_this10","reduce","getTag","attrSelector","getTags","list","updateTag","selector","_parseSelector","_setMetaElementAttributes","removeTag","removeTagElement","_this11","filter","_containsAttributes","getElementsByTagName","_this12","keys","prop","_getMetaKeyMap","attr","_this13","every","META_KEYS_MAP","Meta_Factory","r","providedIn","httpEquiv","createTitle","Title","getTitle","title","setTitle","newTitle","Title_Factory","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","_len","m","_key","dashCaseToCamelCase","_len2","_key2","toUpperCase","exportNgVar","COMPILED","ng","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","timeChangeDetection","config","record","profileName","isProfilerAvailable","profile","start","performanceNow","tick","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","s","unescapeHtml","unescapedText","makeStateKey","TransferState","store","onSerializeCallbacks","defaultValue","hasKey","hasOwnProperty","onSerialize","toJson","e","JSON","stringify","TransferState_Factory","state","retrieveTransferredState","script","getElementById","initialState","parse","BrowserTransferStateModule","BrowserTransferStateModule_Factory","By","all","css","debugElement","nativeElement","elementMatches","directive","debugNode","providerTokens","n","matches","msMatchesSelector","webkitMatchesSelector","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","enable","HammerGestureConfig_Factory","HammerGesturesPlugin","_EventManagerPlugin3","_config","loader","_this14","_loaderPromise","isCustomEvent","_this15","cancelRegistration","deregister","catch","eventObj","on","off","HammerGesturesPlugin_Factory","HammerModule","HammerModule_Factory","DomSanitizer","DomSanitizer_Factory","DomSanitizerImpl","domSanitizerImplFactory","_DomSanitizer","_this16","sanitize","ctx","NONE","HTML","String","toString","STYLE","SCRIPT","URL","RESOURCE_URL","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizerImpl_Factory","VERSION","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵDomSharedStylesHost","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵNAMESPACE_URIS","ɵSharedStylesHost","ɵTRANSITION_ID","ɵescapeHtml","ɵflattenStyles","ɵinitDomAdapter","ɵshimContentAttribute","ɵshimHostAttribute"],"sources":["D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@angular/platform-browser/fesm2015/platform-browser.mjs"],"sourcesContent":["/**\n * @license Angular v14.3.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, inject, ɵConsole, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserXhr.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nEventManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [EVENT_MANAGER_PLUGINS]\n                    }] }, { type: i0.NgZone }];\n    } });\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }] });\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\nfunction removeStyle(styleNode) {\n    ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: DomSharedStylesHost }, { token: APP_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nDomRendererFactory2.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [APP_ID]\n                    }] }];\n    } });\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nKeyEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return ɵinternalCreateApplication(Object.assign({ rootComponent }, createProvidersConfig(options)));\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction createApplication(options) {\n    return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    var _a;\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...((_a = options === null || options === void 0 ? void 0 : options.providers) !== null && _a !== void 0 ? _a : []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @developerPreview\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: ɵTESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: ɵTESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    },\n    {\n        provide: Testability,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] }, {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    NG_DEV_MODE ? { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } : []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if (NG_DEV_MODE && providersAlreadyPresent) {\n            throw new Error(`Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] });\nBrowserModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, providers: [\n        ...BROWSER_MODULE_PROVIDERS,\n        ...TESTABILITY_PROVIDERS\n    ], imports: [CommonModule, ApplicationModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        ...BROWSER_MODULE_PROVIDERS,\n                        ...TESTABILITY_PROVIDERS\n                    ],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMeta.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nTitle.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Indicates whether the state is empty.\n     */\n    get isEmpty() {\n        return Object.keys(this.store).length === 0;\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTransferState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, providedIn: 'root', useFactory: () => {\n        const doc = inject(DOCUMENT);\n        const appId = inject(APP_ID);\n        const state = new TransferState();\n        state.store = retrieveTransferredState(doc, appId);\n        return state;\n    } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => {\n                        const doc = inject(DOCUMENT);\n                        const appId = inject(APP_ID);\n                        const state = new TransferState();\n                        state.store = retrieveTransferredState(doc, appId);\n                        return state;\n                    }\n                }]\n        }] });\nfunction retrieveTransferredState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return initialState;\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserTransferStateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGestureConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGesturesPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: HammerGestureConfig, decorators: [{\n                        type: Inject,\n                        args: [HAMMER_GESTURE_CONFIG]\n                    }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [HAMMER_LOADER]\n                    }] }];\n    } });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHammerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule });\nHammerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, providers: [\n        {\n            provide: EVENT_MANAGER_PLUGINS,\n            useClass: HammerGesturesPlugin,\n            multi: true,\n            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n        },\n        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(function () { return DomSanitizerImpl; }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizerImpl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('14.3.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}