{"ast":null,"code":"import _possibleConstructorReturn from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\";\nimport _get from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { Subscriber } from '../Subscriber';\nexport function retry() {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  return function (source) {\n    return source.lift(new RetryOperator(count, source));\n  };\n}\nvar RetryOperator = /*#__PURE__*/function () {\n  function RetryOperator(count, source) {\n    _classCallCheck(this, RetryOperator);\n    this.count = count;\n    this.source = source;\n  }\n  _createClass(RetryOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n  }]);\n  return RetryOperator;\n}();\nvar RetrySubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(RetrySubscriber, _Subscriber);\n  function RetrySubscriber(destination, count, source) {\n    var _this;\n    _classCallCheck(this, RetrySubscriber);\n    _this = _callSuper(this, RetrySubscriber, [destination]);\n    _this.count = count;\n    _this.source = source;\n    return _this;\n  }\n  _createClass(RetrySubscriber, [{\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        var source = this.source,\n          count = this.count;\n        if (count === 0) {\n          return _get(_getPrototypeOf(RetrySubscriber.prototype), \"error\", this).call(this, err);\n        } else if (count > -1) {\n          this.count = count - 1;\n        }\n        source.subscribe(this._unsubscribeAndRecycle());\n      }\n    }\n  }]);\n  return RetrySubscriber;\n}(Subscriber);","map":{"version":3,"names":["Subscriber","retry","count","arguments","length","undefined","source","lift","RetryOperator","_classCallCheck","_createClass","key","value","call","subscriber","subscribe","RetrySubscriber","_Subscriber","_inherits","destination","_this","_callSuper","error","err","isStopped","_get","_getPrototypeOf","prototype","_unsubscribeAndRecycle"],"sources":["D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/rxjs/_esm2015/internal/operators/retry.js"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,OAAO,SAASC,KAAKA,CAAA,EAAa;EAAA,IAAZC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC5B,OAAO,UAACG,MAAM;IAAA,OAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAa,CAACN,KAAK,EAAEI,MAAM,CAAC,CAAC;EAAA;AACpE;AAAC,IACKE,aAAa;EACf,SAAAA,cAAYN,KAAK,EAAEI,MAAM,EAAE;IAAAG,eAAA,OAAAD,aAAA;IACvB,IAAI,CAACN,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACI,MAAM,GAAGA,MAAM;EACxB;EAACI,YAAA,CAAAF,aAAA;IAAAG,GAAA;IAAAC,KAAA,EACD,SAAAC,KAAKC,UAAU,EAAER,MAAM,EAAE;MACrB,OAAOA,MAAM,CAACS,SAAS,CAAC,IAAIC,eAAe,CAACF,UAAU,EAAE,IAAI,CAACZ,KAAK,EAAE,IAAI,CAACI,MAAM,CAAC,CAAC;IACrF;EAAC;EAAA,OAAAE,aAAA;AAAA;AAAA,IAECQ,eAAe,0BAAAC,WAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,WAAA;EACjB,SAAAD,gBAAYG,WAAW,EAAEjB,KAAK,EAAEI,MAAM,EAAE;IAAA,IAAAc,KAAA;IAAAX,eAAA,OAAAO,eAAA;IACpCI,KAAA,GAAAC,UAAA,OAAAL,eAAA,GAAMG,WAAW;IACjBC,KAAA,CAAKlB,KAAK,GAAGA,KAAK;IAClBkB,KAAA,CAAKd,MAAM,GAAGA,MAAM;IAAC,OAAAc,KAAA;EACzB;EAACV,YAAA,CAAAM,eAAA;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAU,MAAMC,GAAG,EAAE;MACP,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;QACjB,IAAQlB,MAAM,GAAY,IAAI,CAAtBA,MAAM;UAAEJ,KAAK,GAAK,IAAI,CAAdA,KAAK;QACrB,IAAIA,KAAK,KAAK,CAAC,EAAE;UACb,OAAAuB,IAAA,CAAAC,eAAA,CAAAV,eAAA,CAAAW,SAAA,kBAAAd,IAAA,OAAmBU,GAAG;QAC1B,CAAC,MACI,IAAIrB,KAAK,GAAG,CAAC,CAAC,EAAE;UACjB,IAAI,CAACA,KAAK,GAAGA,KAAK,GAAG,CAAC;QAC1B;QACAI,MAAM,CAACS,SAAS,CAAC,IAAI,CAACa,sBAAsB,CAAC,CAAC,CAAC;MACnD;IACJ;EAAC;EAAA,OAAAZ,eAAA;AAAA,EAjByBhB,UAAU"},"metadata":{},"sourceType":"module"}