{"ast":null,"code":"import _possibleConstructorReturn from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n  return function (source) {\n    return source.lift(new TakeUntilOperator(notifier));\n  };\n}\nvar TakeUntilOperator = /*#__PURE__*/function () {\n  function TakeUntilOperator(notifier) {\n    _classCallCheck(this, TakeUntilOperator);\n    this.notifier = notifier;\n  }\n  _createClass(TakeUntilOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n      var notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n      if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n        takeUntilSubscriber.add(notifierSubscription);\n        return source.subscribe(takeUntilSubscriber);\n      }\n      return takeUntilSubscriber;\n    }\n  }]);\n  return TakeUntilOperator;\n}();\nvar TakeUntilSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(TakeUntilSubscriber, _SimpleOuterSubscribe);\n  function TakeUntilSubscriber(destination) {\n    var _this;\n    _classCallCheck(this, TakeUntilSubscriber);\n    _this = _callSuper(this, TakeUntilSubscriber, [destination]);\n    _this.seenValue = false;\n    return _this;\n  }\n  _createClass(TakeUntilSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.seenValue = true;\n      this.complete();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {}\n  }]);\n  return TakeUntilSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"names":["innerSubscribe","SimpleInnerSubscriber","SimpleOuterSubscriber","takeUntil","notifier","source","lift","TakeUntilOperator","_classCallCheck","_createClass","key","value","call","subscriber","takeUntilSubscriber","TakeUntilSubscriber","notifierSubscription","seenValue","add","subscribe","_SimpleOuterSubscribe","_inherits","destination","_this","_callSuper","notifyNext","complete","notifyComplete"],"sources":["D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/rxjs/_esm2015/internal/operators/takeUntil.js"],"sourcesContent":["import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,cAAc,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,mBAAmB;AAChG,OAAO,SAASC,SAASA,CAACC,QAAQ,EAAE;EAChC,OAAO,UAACC,MAAM;IAAA,OAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,iBAAiB,CAACH,QAAQ,CAAC,CAAC;EAAA;AACnE;AAAC,IACKG,iBAAiB;EACnB,SAAAA,kBAAYH,QAAQ,EAAE;IAAAI,eAAA,OAAAD,iBAAA;IAClB,IAAI,CAACH,QAAQ,GAAGA,QAAQ;EAC5B;EAACK,YAAA,CAAAF,iBAAA;IAAAG,GAAA;IAAAC,KAAA,EACD,SAAAC,KAAKC,UAAU,EAAER,MAAM,EAAE;MACrB,IAAMS,mBAAmB,GAAG,IAAIC,mBAAmB,CAACF,UAAU,CAAC;MAC/D,IAAMG,oBAAoB,GAAGhB,cAAc,CAAC,IAAI,CAACI,QAAQ,EAAE,IAAIH,qBAAqB,CAACa,mBAAmB,CAAC,CAAC;MAC1G,IAAIE,oBAAoB,IAAI,CAACF,mBAAmB,CAACG,SAAS,EAAE;QACxDH,mBAAmB,CAACI,GAAG,CAACF,oBAAoB,CAAC;QAC7C,OAAOX,MAAM,CAACc,SAAS,CAACL,mBAAmB,CAAC;MAChD;MACA,OAAOA,mBAAmB;IAC9B;EAAC;EAAA,OAAAP,iBAAA;AAAA;AAAA,IAECQ,mBAAmB,0BAAAK,qBAAA;EAAAC,SAAA,CAAAN,mBAAA,EAAAK,qBAAA;EACrB,SAAAL,oBAAYO,WAAW,EAAE;IAAA,IAAAC,KAAA;IAAAf,eAAA,OAAAO,mBAAA;IACrBQ,KAAA,GAAAC,UAAA,OAAAT,mBAAA,GAAMO,WAAW;IACjBC,KAAA,CAAKN,SAAS,GAAG,KAAK;IAAC,OAAAM,KAAA;EAC3B;EAACd,YAAA,CAAAM,mBAAA;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAc,WAAA,EAAa;MACT,IAAI,CAACR,SAAS,GAAG,IAAI;MACrB,IAAI,CAACS,QAAQ,CAAC,CAAC;IACnB;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAAgB,eAAA,EAAiB,CACjB;EAAC;EAAA,OAAAZ,mBAAA;AAAA,EAV6Bb,qBAAqB"},"metadata":{},"sourceType":"module"}