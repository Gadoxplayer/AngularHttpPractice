{"ast":null,"code":"import _possibleConstructorReturn from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n  if (subscriptionDelay) {\n    return function (source) {\n      return new SubscriptionDelayObservable(source, subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));\n    };\n  }\n  return function (source) {\n    return source.lift(new DelayWhenOperator(delayDurationSelector));\n  };\n}\nvar DelayWhenOperator = /*#__PURE__*/function () {\n  function DelayWhenOperator(delayDurationSelector) {\n    _classCallCheck(this, DelayWhenOperator);\n    this.delayDurationSelector = delayDurationSelector;\n  }\n  _createClass(DelayWhenOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n  }]);\n  return DelayWhenOperator;\n}();\nvar DelayWhenSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(DelayWhenSubscriber, _OuterSubscriber);\n  function DelayWhenSubscriber(destination, delayDurationSelector) {\n    var _this;\n    _classCallCheck(this, DelayWhenSubscriber);\n    _this = _callSuper(this, DelayWhenSubscriber, [destination]);\n    _this.delayDurationSelector = delayDurationSelector;\n    _this.completed = false;\n    _this.delayNotifierSubscriptions = [];\n    _this.index = 0;\n    return _this;\n  }\n  _createClass(DelayWhenSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n      this.destination.next(outerValue);\n      this.removeSubscription(innerSub);\n      this.tryComplete();\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(error, innerSub) {\n      this._error(error);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(innerSub) {\n      var value = this.removeSubscription(innerSub);\n      if (value) {\n        this.destination.next(value);\n      }\n      this.tryComplete();\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      var index = this.index++;\n      try {\n        var delayNotifier = this.delayDurationSelector(value, index);\n        if (delayNotifier) {\n          this.tryDelay(delayNotifier, value);\n        }\n      } catch (err) {\n        this.destination.error(err);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.completed = true;\n      this.tryComplete();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      subscription.unsubscribe();\n      var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n      if (subscriptionIdx !== -1) {\n        this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      }\n      return subscription.outerValue;\n    }\n  }, {\n    key: \"tryDelay\",\n    value: function tryDelay(delayNotifier, value) {\n      var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n      if (notifierSubscription && !notifierSubscription.closed) {\n        var destination = this.destination;\n        destination.add(notifierSubscription);\n        this.delayNotifierSubscriptions.push(notifierSubscription);\n      }\n    }\n  }, {\n    key: \"tryComplete\",\n    value: function tryComplete() {\n      if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n        this.destination.complete();\n      }\n    }\n  }]);\n  return DelayWhenSubscriber;\n}(OuterSubscriber);\nvar SubscriptionDelayObservable = /*#__PURE__*/function (_Observable) {\n  _inherits(SubscriptionDelayObservable, _Observable);\n  function SubscriptionDelayObservable(source, subscriptionDelay) {\n    var _this2;\n    _classCallCheck(this, SubscriptionDelayObservable);\n    _this2 = _callSuper(this, SubscriptionDelayObservable);\n    _this2.source = source;\n    _this2.subscriptionDelay = subscriptionDelay;\n    return _this2;\n  }\n  _createClass(SubscriptionDelayObservable, [{\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n  }]);\n  return SubscriptionDelayObservable;\n}(Observable);\nvar SubscriptionDelaySubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SubscriptionDelaySubscriber, _Subscriber);\n  function SubscriptionDelaySubscriber(parent, source) {\n    var _this3;\n    _classCallCheck(this, SubscriptionDelaySubscriber);\n    _this3 = _callSuper(this, SubscriptionDelaySubscriber);\n    _this3.parent = parent;\n    _this3.source = source;\n    _this3.sourceSubscribed = false;\n    return _this3;\n  }\n  _createClass(SubscriptionDelaySubscriber, [{\n    key: \"_next\",\n    value: function _next(unused) {\n      this.subscribeToSource();\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.unsubscribe();\n      this.parent.error(err);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.unsubscribe();\n      this.subscribeToSource();\n    }\n  }, {\n    key: \"subscribeToSource\",\n    value: function subscribeToSource() {\n      if (!this.sourceSubscribed) {\n        this.sourceSubscribed = true;\n        this.unsubscribe();\n        this.source.subscribe(this.parent);\n      }\n    }\n  }]);\n  return SubscriptionDelaySubscriber;\n}(Subscriber);","map":{"version":3,"names":["Subscriber","Observable","OuterSubscriber","subscribeToResult","delayWhen","delayDurationSelector","subscriptionDelay","source","SubscriptionDelayObservable","lift","DelayWhenOperator","_classCallCheck","_createClass","key","value","call","subscriber","subscribe","DelayWhenSubscriber","_OuterSubscriber","_inherits","destination","_this","_callSuper","completed","delayNotifierSubscriptions","index","notifyNext","outerValue","_innerValue","_outerIndex","_innerIndex","innerSub","next","removeSubscription","tryComplete","notifyError","error","_error","notifyComplete","_next","delayNotifier","tryDelay","err","_complete","unsubscribe","subscription","subscriptionIdx","indexOf","splice","notifierSubscription","closed","add","push","length","complete","_Observable","_this2","_subscribe","SubscriptionDelaySubscriber","_Subscriber","parent","_this3","sourceSubscribed","unused","subscribeToSource"],"sources":["D:/Documents/Eduardo/UdemyCourses/Angularhttp-01-start/node_modules/rxjs/_esm2015/internal/operators/delayWhen.js"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => new SubscriptionDelayObservable(source, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return (source) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\nclass DelayWhenOperator {\n    constructor(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n}\nclass DelayWhenSubscriber extends OuterSubscriber {\n    constructor(destination, delayDurationSelector) {\n        super(destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.index = 0;\n    }\n    notifyNext(outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        const value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    }\n    _next(value) {\n        const index = this.index++;\n        try {\n            const delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    }\n    removeSubscription(subscription) {\n        subscription.unsubscribe();\n        const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    }\n    tryDelay(delayNotifier, value) {\n        const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            const destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    }\n    tryComplete() {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    }\n}\nclass SubscriptionDelayObservable extends Observable {\n    constructor(source, subscriptionDelay) {\n        super();\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    _subscribe(subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n}\nclass SubscriptionDelaySubscriber extends Subscriber {\n    constructor(parent, source) {\n        super();\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    _next(unused) {\n        this.subscribeToSource();\n    }\n    _error(err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    }\n    _complete() {\n        this.unsubscribe();\n        this.subscribeToSource();\n    }\n    subscribeToSource() {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,OAAO,SAASC,SAASA,CAACC,qBAAqB,EAAEC,iBAAiB,EAAE;EAChE,IAAIA,iBAAiB,EAAE;IACnB,OAAO,UAACC,MAAM;MAAA,OAAK,IAAIC,2BAA2B,CAACD,MAAM,EAAED,iBAAiB,CAAC,CACxEG,IAAI,CAAC,IAAIC,iBAAiB,CAACL,qBAAqB,CAAC,CAAC;IAAA;EAC3D;EACA,OAAO,UAACE,MAAM;IAAA,OAAKA,MAAM,CAACE,IAAI,CAAC,IAAIC,iBAAiB,CAACL,qBAAqB,CAAC,CAAC;EAAA;AAChF;AAAC,IACKK,iBAAiB;EACnB,SAAAA,kBAAYL,qBAAqB,EAAE;IAAAM,eAAA,OAAAD,iBAAA;IAC/B,IAAI,CAACL,qBAAqB,GAAGA,qBAAqB;EACtD;EAACO,YAAA,CAAAF,iBAAA;IAAAG,GAAA;IAAAC,KAAA,EACD,SAAAC,KAAKC,UAAU,EAAET,MAAM,EAAE;MACrB,OAAOA,MAAM,CAACU,SAAS,CAAC,IAAIC,mBAAmB,CAACF,UAAU,EAAE,IAAI,CAACX,qBAAqB,CAAC,CAAC;IAC5F;EAAC;EAAA,OAAAK,iBAAA;AAAA;AAAA,IAECQ,mBAAmB,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,gBAAA;EACrB,SAAAD,oBAAYG,WAAW,EAAEhB,qBAAqB,EAAE;IAAA,IAAAiB,KAAA;IAAAX,eAAA,OAAAO,mBAAA;IAC5CI,KAAA,GAAAC,UAAA,OAAAL,mBAAA,GAAMG,WAAW;IACjBC,KAAA,CAAKjB,qBAAqB,GAAGA,qBAAqB;IAClDiB,KAAA,CAAKE,SAAS,GAAG,KAAK;IACtBF,KAAA,CAAKG,0BAA0B,GAAG,EAAE;IACpCH,KAAA,CAAKI,KAAK,GAAG,CAAC;IAAC,OAAAJ,KAAA;EACnB;EAACV,YAAA,CAAAM,mBAAA;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAa,WAAWC,UAAU,EAAEC,WAAW,EAAEC,WAAW,EAAEC,WAAW,EAAEC,QAAQ,EAAE;MACpE,IAAI,CAACX,WAAW,CAACY,IAAI,CAACL,UAAU,CAAC;MACjC,IAAI,CAACM,kBAAkB,CAACF,QAAQ,CAAC;MACjC,IAAI,CAACG,WAAW,CAAC,CAAC;IACtB;EAAC;IAAAtB,GAAA;IAAAC,KAAA,EACD,SAAAsB,YAAYC,KAAK,EAAEL,QAAQ,EAAE;MACzB,IAAI,CAACM,MAAM,CAACD,KAAK,CAAC;IACtB;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAyB,eAAeP,QAAQ,EAAE;MACrB,IAAMlB,KAAK,GAAG,IAAI,CAACoB,kBAAkB,CAACF,QAAQ,CAAC;MAC/C,IAAIlB,KAAK,EAAE;QACP,IAAI,CAACO,WAAW,CAACY,IAAI,CAACnB,KAAK,CAAC;MAChC;MACA,IAAI,CAACqB,WAAW,CAAC,CAAC;IACtB;EAAC;IAAAtB,GAAA;IAAAC,KAAA,EACD,SAAA0B,MAAM1B,KAAK,EAAE;MACT,IAAMY,KAAK,GAAG,IAAI,CAACA,KAAK,EAAE;MAC1B,IAAI;QACA,IAAMe,aAAa,GAAG,IAAI,CAACpC,qBAAqB,CAACS,KAAK,EAAEY,KAAK,CAAC;QAC9D,IAAIe,aAAa,EAAE;UACf,IAAI,CAACC,QAAQ,CAACD,aAAa,EAAE3B,KAAK,CAAC;QACvC;MACJ,CAAC,CACD,OAAO6B,GAAG,EAAE;QACR,IAAI,CAACtB,WAAW,CAACgB,KAAK,CAACM,GAAG,CAAC;MAC/B;IACJ;EAAC;IAAA9B,GAAA;IAAAC,KAAA,EACD,SAAA8B,UAAA,EAAY;MACR,IAAI,CAACpB,SAAS,GAAG,IAAI;MACrB,IAAI,CAACW,WAAW,CAAC,CAAC;MAClB,IAAI,CAACU,WAAW,CAAC,CAAC;IACtB;EAAC;IAAAhC,GAAA;IAAAC,KAAA,EACD,SAAAoB,mBAAmBY,YAAY,EAAE;MAC7BA,YAAY,CAACD,WAAW,CAAC,CAAC;MAC1B,IAAME,eAAe,GAAG,IAAI,CAACtB,0BAA0B,CAACuB,OAAO,CAACF,YAAY,CAAC;MAC7E,IAAIC,eAAe,KAAK,CAAC,CAAC,EAAE;QACxB,IAAI,CAACtB,0BAA0B,CAACwB,MAAM,CAACF,eAAe,EAAE,CAAC,CAAC;MAC9D;MACA,OAAOD,YAAY,CAAClB,UAAU;IAClC;EAAC;IAAAf,GAAA;IAAAC,KAAA,EACD,SAAA4B,SAASD,aAAa,EAAE3B,KAAK,EAAE;MAC3B,IAAMoC,oBAAoB,GAAG/C,iBAAiB,CAAC,IAAI,EAAEsC,aAAa,EAAE3B,KAAK,CAAC;MAC1E,IAAIoC,oBAAoB,IAAI,CAACA,oBAAoB,CAACC,MAAM,EAAE;QACtD,IAAM9B,WAAW,GAAG,IAAI,CAACA,WAAW;QACpCA,WAAW,CAAC+B,GAAG,CAACF,oBAAoB,CAAC;QACrC,IAAI,CAACzB,0BAA0B,CAAC4B,IAAI,CAACH,oBAAoB,CAAC;MAC9D;IACJ;EAAC;IAAArC,GAAA;IAAAC,KAAA,EACD,SAAAqB,YAAA,EAAc;MACV,IAAI,IAAI,CAACX,SAAS,IAAI,IAAI,CAACC,0BAA0B,CAAC6B,MAAM,KAAK,CAAC,EAAE;QAChE,IAAI,CAACjC,WAAW,CAACkC,QAAQ,CAAC,CAAC;MAC/B;IACJ;EAAC;EAAA,OAAArC,mBAAA;AAAA,EA5D6BhB,eAAe;AAAA,IA8D3CM,2BAA2B,0BAAAgD,WAAA;EAAApC,SAAA,CAAAZ,2BAAA,EAAAgD,WAAA;EAC7B,SAAAhD,4BAAYD,MAAM,EAAED,iBAAiB,EAAE;IAAA,IAAAmD,MAAA;IAAA9C,eAAA,OAAAH,2BAAA;IACnCiD,MAAA,GAAAlC,UAAA,OAAAf,2BAAA;IACAiD,MAAA,CAAKlD,MAAM,GAAGA,MAAM;IACpBkD,MAAA,CAAKnD,iBAAiB,GAAGA,iBAAiB;IAAC,OAAAmD,MAAA;EAC/C;EAAC7C,YAAA,CAAAJ,2BAAA;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAA4C,WAAW1C,UAAU,EAAE;MACnB,IAAI,CAACV,iBAAiB,CAACW,SAAS,CAAC,IAAI0C,2BAA2B,CAAC3C,UAAU,EAAE,IAAI,CAACT,MAAM,CAAC,CAAC;IAC9F;EAAC;EAAA,OAAAC,2BAAA;AAAA,EARqCP,UAAU;AAAA,IAU9C0D,2BAA2B,0BAAAC,WAAA;EAAAxC,SAAA,CAAAuC,2BAAA,EAAAC,WAAA;EAC7B,SAAAD,4BAAYE,MAAM,EAAEtD,MAAM,EAAE;IAAA,IAAAuD,MAAA;IAAAnD,eAAA,OAAAgD,2BAAA;IACxBG,MAAA,GAAAvC,UAAA,OAAAoC,2BAAA;IACAG,MAAA,CAAKD,MAAM,GAAGA,MAAM;IACpBC,MAAA,CAAKvD,MAAM,GAAGA,MAAM;IACpBuD,MAAA,CAAKC,gBAAgB,GAAG,KAAK;IAAC,OAAAD,MAAA;EAClC;EAAClD,YAAA,CAAA+C,2BAAA;IAAA9C,GAAA;IAAAC,KAAA,EACD,SAAA0B,MAAMwB,MAAM,EAAE;MACV,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC5B;EAAC;IAAApD,GAAA;IAAAC,KAAA,EACD,SAAAwB,OAAOK,GAAG,EAAE;MACR,IAAI,CAACE,WAAW,CAAC,CAAC;MAClB,IAAI,CAACgB,MAAM,CAACxB,KAAK,CAACM,GAAG,CAAC;IAC1B;EAAC;IAAA9B,GAAA;IAAAC,KAAA,EACD,SAAA8B,UAAA,EAAY;MACR,IAAI,CAACC,WAAW,CAAC,CAAC;MAClB,IAAI,CAACoB,iBAAiB,CAAC,CAAC;IAC5B;EAAC;IAAApD,GAAA;IAAAC,KAAA,EACD,SAAAmD,kBAAA,EAAoB;MAChB,IAAI,CAAC,IAAI,CAACF,gBAAgB,EAAE;QACxB,IAAI,CAACA,gBAAgB,GAAG,IAAI;QAC5B,IAAI,CAAClB,WAAW,CAAC,CAAC;QAClB,IAAI,CAACtC,MAAM,CAACU,SAAS,CAAC,IAAI,CAAC4C,MAAM,CAAC;MACtC;IACJ;EAAC;EAAA,OAAAF,2BAAA;AAAA,EAxBqC3D,UAAU"},"metadata":{},"sourceType":"module"}